name: Deployment
# Trigger the workflow on push events to the main and dev branches
on:
  push:
    branches:
      - main
      - dev
env:
  MONGO_DB_NAME: gha-demo
jobs:
  test:
    environment: testing
    env:
      MONGODB_CLUSTER_ADDRESS: ${{ secrets.MONGODB_CLUSTER_ADDRESS }}
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      PORT: 8080
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-deps-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Debug environment context
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Environment: ${{ job.environment }}"
      - name: Debug secrets
        run: |
          echo "Cluster Address: ${MONGODB_CLUSTER_ADDRESS:-not set}"
          echo "Username: ${MONGODB_USERNAME:-not set}"
          echo "Password Length: ${#MONGODB_PASSWORD}"
      - name: Test MongoDB connectivity
        run: |
          node -e "
          const { MongoClient } = require('mongodb');
          const uri = 'mongodb+srv://${{ secrets.MONGODB_USERNAME }}:${{ secrets.MONGODB_PASSWORD }}@${{ secrets.MONGODB_CLUSTER_ADDRESS }}';
          (async () => {
            try {
              const client = new MongoClient(uri);
              await client.connect();
              console.log('Successfully connected to MongoDB');
              await client.close();
            } catch (error) {
              console.error('MongoDB connection failed:', error);
              process.exit(1);
            }
          })();
          "
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT
      - name: Run tests
        run: npm test
      - name: Output information
        run: "echo MONGODB_USERNAME: $MONGODB_USERNAME"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |        
          echo "MONGODB_USERNAME: ${{env.MONGODB_USERNAME}}"
          echo "MONGODB_NAME: $MONGO_DB_NAME"
